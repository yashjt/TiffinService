<%- include('partials/header') %>

    <div class="container mt-5">
        <h2>Complete Your Payment</h2>

        <div class="row">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <strong>Order #<%= order._id.toString().slice(-6).toUpperCase() %></strong>
                            <small class="text-muted ms-3">
                                <%= new Date(order.createdAt).toLocaleString() %>
                            </small>
                        </div>
                        <span class="badge bg-warning">Pending Payment</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <h5>Items:</h5>
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Item</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% order.items.forEach(item=> { %>
                                            <tr>
                                                <td>
                                                    <%= item.name %>
                                                </td>
                                                <td>
                                                    <%= item.quantity %>
                                                </td>
                                                <td>$<%= item.price.toFixed(2) %>
                                                </td>
                                                <td>$<%= (item.price * item.quantity).toFixed(2) %>
                                                </td>
                                            </tr>
                                            <% }) %>
                                                <tr class="table-active">
                                                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                                    <td><strong>$<%= order.totalPrice.toFixed(2) %></strong></td>
                                                </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-md-4">
                                <h5>Delivery Details:</h5>
                                <p><strong>Address:</strong><br>
                                    <%= order.deliveryAddress %>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Payment Method</h5>
                    </div>
                    <div class="card-body">
                        <form id="payment-form">
                            <div class="mb-3">
                                <label for="card-element" class="form-label">Credit or Debit Card</label>
                                <div id="card-element" class="form-control p-3" style="height: 45px;"></div>
                                <div id="card-errors" class="text-danger mt-2" role="alert"></div>
                            </div>

                            <button type="submit" id="submit-button" class="btn btn-primary w-100">
                                Pay $<%= order.totalPrice.toFixed(2) %>
                            </button>

                            <div class="text-center mt-3">
                                <div id="payment-processing" class="d-none">
                                    <div class="spinner-border text-primary spinner-border-sm" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <span class="ms-2">Processing payment...</span>
                                </div>
                            </div>
                        </form>

                        <div class="mt-3 text-center">
                            <a href="/my-orders" class="btn btn-sm btn-outline-secondary">Cancel and return to
                                orders</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize Stripe
            const stripe = Stripe('<%= stripePublicKey %>');
            const elements = stripe.elements();

            // Create card element
            const cardElement = elements.create('card', {
                style: {
                    base: {
                        fontSize: '16px',
                        color: '#333',
                        '::placeholder': {
                            color: '#aab7c4',
                        },
                    },
                    invalid: {
                        color: '#dc3545',
                        iconColor: '#dc3545',
                    },
                }
            });

            // Mount the card element
            cardElement.mount('#card-element');

            // Handle form submission
            const form = document.getElementById('payment-form');
            const submitButton = document.getElementById('submit-button');
            const paymentProcessing = document.getElementById('payment-processing');
            const cardErrors = document.getElementById('card-errors');
            const orderId = '<%= order._id %>';

            // Display error messages from Stripe
            cardElement.addEventListener('change', function (event) {
                if (event.error) {
                    cardErrors.textContent = event.error.message;
                } else {
                    cardErrors.textContent = '';
                }
            });

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                // Disable button and show processing message
                submitButton.disabled = true;
                submitButton.classList.add('d-none');
                paymentProcessing.classList.remove('d-none');

                try {
                    // Create payment intent
                    const intentResponse = await fetch('/create-payment-intent', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId: orderId }),
                    });

                    const intentData = await intentResponse.json();

                    if (!intentResponse.ok) {
                        throw new Error(intentData.error || 'Failed to initialize payment');
                    }

                    // Confirm card payment
                    const { paymentIntent, error } = await stripe.confirmCardPayment(intentData.clientSecret, {
                        payment_method: {
                            card: cardElement,
                            billing_details: {
                                name: '<%= user.name || "Customer" %>'
                            },
                        },
                    });

                    if (error) {
                        throw new Error(error.message);
                    }

                    if (paymentIntent.status === 'succeeded') {
                        // Notify server of successful payment
                        const verifyResponse = await fetch('/payment-success', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                paymentIntentId: paymentIntent.id,
                                orderId: orderId,
                            }),
                        });

                        const verifyData = await verifyResponse.json();

                        if (!verifyResponse.ok) {
                            throw new Error(verifyData.error || 'Payment verification failed');
                        }

                        // Success - redirect to order history
                        alert('Payment successful! Your order has been confirmed.');
                        window.location.href = '/my-orders';
                    }
                } catch (error) {
                    // Re-enable button and hide processing message
                    submitButton.disabled = false;
                    submitButton.classList.remove('d-none');
                    paymentProcessing.classList.add('d-none');

                    // Display error message
                    cardErrors.textContent = error.message || 'An error occurred during payment processing.';
                    console.error('Payment error:', error);
                }
            });
        });
    </script>

    <%- include('partials/footer') %>